openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/auth/login:
    post:
      summary: 'Login user and create token'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'O campo value deve ser um endereço de e-mail válido.'
                  example: altenwerth.ulices@example.net
                password:
                  type: string
                  description: ''
                  example: eius
                remember_me:
                  type: boolean
                  description: ''
                  example: true
              required:
                - email
                - password
      security: []
  /api/auth/register:
    post:
      summary: 'Create user'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'O campo value deve ser um endereço de e-mail válido.'
                  example: austyn.goldner@example.net
                password:
                  type: string
                  description: 'O campo value deve ter pelo menos 8 caracteres.'
                  example: 'y'
                funcao:
                  type: string
                  description: 'Must be one of <code>A</code> or <code>E</code>.'
                  example: A
                id:
                  type: number
                  description: ''
                  example: 815.937531972
                id_empresa:
                  type: number
                  description: 'O campo value é obrigatório quando <code>funcao</code> for <code>E</code>.'
                  example: 90939.295205278
              required:
                - email
                - password
                - funcao
      security: []
  /api/auth/logout:
    get:
      summary: 'Logout user (Revoke the token)'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/auth/user:
    get:
      summary: 'Get the authenticated User'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/auth/funcionarios:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/auth/funcionario/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the funcionario.'
        example: dolores
        required: true
        schema:
          type: string
  /api/auth/funcionario:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 281.0
                id_empresa:
                  type: number
                  description: ''
                  example: 562.619956
                trabalho:
                  type: string
                  description: 'Must be one of <code>HO</code>, <code>HI</code>, or <code>PS</code>.'
                  example: PS
                genero:
                  type: string
                  description: 'Must be one of <code>H</code> or <code>M</code>.'
                  example: H
                engajou:
                  type: string
                  description: 'Must be one of <code>N</code> or <code>S</code>.'
                  example: 'N'
                nome:
                  type: string
                  description: 'O campo value não pode ser superior a 40 caracteres.'
                  example: vfyhrzobx
                sobrenome:
                  type: string
                  description: 'O campo value não pode ser superior a 100 caracteres.'
                  example: eoceozgbrfinjomxdjbvjdvpnxxofioblxurwhqhxkyvqjlhby
                nome_social:
                  type: string
                  description: 'O campo value não pode ser superior a 40 caracteres.'
                  example: qharsnmokmy
                telefone:
                  type: string
                  description: 'O campo value deve ter 11 dígitos.'
                  example: '56883419817'
                cpf:
                  type: string
                  description: 'O campo value deve ter 11 dígitos.'
                  example: '08686359880'
                email:
                  type: string
                  description: 'O campo value deve ser um endereço de e-mail válido.'
                  example: brianne.weimann@example.com
                data_nascimento:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-12-20'
              required:
                - id_empresa
                - nome
                - sobrenome
                - telefone
                - cpf
                - email
      security: []
  /api/auth/empresas:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/auth/empresa/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the empresa.'
        example: sint
        required: true
        schema:
          type: string
  /api/auth/empresa:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 12.226130918
                nome:
                  type: string
                  description: 'O campo value não pode ser superior a 100 caracteres.'
                  example: lty
                cupom:
                  type: string
                  description: 'O campo value não pode ser superior a 30 caracteres.'
                  example: pqhifg
                total_funcionario:
                  type: number
                  description: ''
                  example: 4666289.223791
              required:
                - nome
                - cupom
      security: []
  /api/auth/anamneses:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/auth/anamnese:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 10473891.2
                id_empresa:
                  type: number
                  description: ''
                  example: 2238.64216516
                id_funcionario:
                  type: number
                  description: ''
                  example: 236.0954
                data_atualizacao:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-12-20'
                data_criacao:
                  type: string
                  description: 'Must be a valid date in the format <code>Y-m-d</code>.'
                  example: '2022-12-20'
                proprietario:
                  type: string
                  description: ''
                  example: fugit
                cronicos:
                  type: string
                  description: ''
                  example: doloribus
                mental:
                  type: string
                  description: ''
                  example: labore
                alimentacao:
                  type: string
                  description: ''
                  example: mollitia
                fisico:
                  type: string
                  description: ''
                  example: commodi
              required:
                - id_empresa
                - id_funcionario
      security: []
  /api/auth/import-export-excel:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/felling:
    post:
      summary: Store
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: 'O campo value não pode ser superior a 50 caracteres.'
                  example: zyhbd
                sobrenome:
                  type: string
                  description: 'O campo value não pode ser superior a 50 caracteres.'
                  example: mvoamqytjqpcadcj
                telefone:
                  type: string
                  description: 'O campo value deve ter 11 dígitos.'
                  example: '86960370750'
                cpf:
                  type: string
                  description: 'O campo value deve ter 11 dígitos.'
                  example: '65186742541'
                qualidade_de_alimentacao:
                  type: number
                  description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                  example: '4'
                nivel_de_estresse:
                  type: number
                  description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                  example: '2'
                qualidade_de_sono:
                  type: number
                  description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                  example: '5'
                nivel_de_ansiedade:
                  type: number
                  description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                  example: '4'
                nivel_de_humor:
                  type: number
                  description: 'Must be one of <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, or <code>5</code>.'
                  example: '4'
              required:
                - cpf
      security: []
  /api/send_flow:
    post:
      summary: send_flow
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                all_users:
                  type: boolean
                  description: ''
                  example: false
                id_empresa:
                  type: number
                  description: ''
                  example: 2854.67767836
                nome_flow:
                  type: string
                  description: 'O campo value não pode ser superior a 50 caracteres.'
                  example: izgdjioeomcsdqhxhgzgnhxagmxwelkcuhpwflexthutjpnx
                id_flow:
                  type: number
                  description: ''
                  example: 609516101.9487
      security: []
tags:
  -
    name: Endpoints
    description: ''
